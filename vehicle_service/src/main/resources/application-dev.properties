logging.level.org.springframework.security=DEBUG
logging.level.com.trackswiftly.vehicle_service.web=DEBUG
logging.level.com.trackswiftly.vehicle_service.services=DEBUG
# logging.level.io.hahn_software.emrs.aspectj=DEBUG
# logging.level.org.springframework.web=DEBUG



# DataSource configuration
spring.datasource.url=jdbc:postgresql://${DB_HOST}/${DB_NAME}?currentSchema=${DB_SCHEMA}&reWriteBatchedInserts=true
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP configuration
spring.datasource.hikari.minimum-idle=20
spring.datasource.hikari.maximum-pool-size=50
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000

# Hibernate configuration
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
hibernate.format_sql=true
hibernate.use_sql_comments=true
hibernate.jdbc.batch_versioned_data=true
hibernate.id.optimizer.pooled.preferred=pooled-lo

# Hibernate batch configuration
spring.jpa.properties.hibernate.jdbc.batch_size=200
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
# hibernate.jdbc.batch_size=40
# hibernate.order_inserts=true
# hibernate.order_updates=true


# Multi-tenancy configuration (if needed)
hibernate.multiTenancy=DISCRIMINATOR
hibernate.tenant_identifier_resolver=com.trackswiftly.vehicle_service.utils.CurrentTenantIdentifierResolverImpl
spring.jpa.properties.hibernate.session_factory.statement_inspector=com.trackswiftly.vehicle_service.utils.TenantStatementInspector


# liquibase
# spring.liquibase.enabled=false


# server config

# server.forward-headers-strategy=NATIVE